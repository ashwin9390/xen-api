name: Build and test

on:
  push:
  pull_request:
  schedule:
    # run daily, this refreshes the cache
    - cron: "13 2 * * *"

concurrency: # On new push, cancel old workflows from the same PR, branch or tag:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  python-test:
    name: Python tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # To check which files changed: origin/master..HEAD
      - uses: LizardByte/setup-python-action@master
        with:
          python-version: ${{matrix.python-version}}

      - uses: actions/cache@v4
        name: Setup cache for running pre-commit fast
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - run: echo "::add-matcher::.github/workflows/python-warning-matcher.json"
        name: "Setup GitHub for reporting Python warnings as annotations in pull request code review"

      - name: Install dependencies for the static analysis
        if: ${{ matrix.python-version != '2.7' }}
        run: >
          pip install opentelemetry-api opentelemetry-exporter-zipkin-json
          opentelemetry-sdk pytest types-mock mock wrapt pandas

      - uses: pre-commit/action@v3.0.0
        name: Run pre-commit hooks with pylint and pytest
        if: ${{ matrix.python-version != '2.7' }}
        with:
          # The --hook-stage manual only runs the stages that add the manual keyword in
          # .pre-commit-config.yaml. Currently that's simple white space checks and pytest:
          extra_args: --all-files --verbose --hook-stage manual

      - name: Run Pytest for python 2 and get code coverage for Codecov
        if: ${{ matrix.python-version == '2.7' }}
        run: >
          pip install enum future mock pytest-coverage pytest-mock &&
          pytest --cov-fail-under=10
          --cov=scripts --cov=ocaml/xcp-rrdd
          scripts/ ocaml/xcp-rrdd -vv -ra
          --cov-report xml:.git/coverage.xml
        env:
          PYTHONDEVMODE: yes

      - name: Upload Python ${{matrix.python-version}} coverage report to Codecov
        uses: codecov/codecov-action@v3
        # Upload the .git/coverage.xml file created by --cov-report xml:.git/coverage.xml
        # created by pytest --cov-report xml:.git/coverage.xml above and the pytest config
        # in xen-api.git/pyproject.toml and .pre-commit-config.yaml in the pre-commit hook.
        with:
          directory: .git
          files: coverage.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: python${{matrix.python-version}}
          name: coverage${{matrix.python-version}}
          verbose: true

  ocaml-tests:
    name: Run OCaml tests
    runs-on: ubuntu-20.04
    env:
      # Ensure you also update test-sdk-builds
      # when changing this value, to keep builds
      # consistent
      XAPI_VERSION: "v0.0.0"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup XenAPI environment
        uses: ./.github/workflows/setup-xapi-environment
        with:
          xapi_version: ${{ env.XAPI_VERSION }}

      - name: Build
        run: opam exec -- make

      - name: Run tests
        run: opam exec -- make test

      - name: Check all code
        run: opam exec -- make check

      - name: Run stress tests
        run: opam exec -- make stresstest
        if: ${{ github.event_name == 'schedule' }}

      - name: Make install smoketest
        run: |
          opam exec -- make install DESTDIR=$(mktemp -d)
          opam exec -- make install DESTDIR=$(mktemp -d) BUILD_PY2=NO

      - name: Check disk space
        run: df -h || true

      - name: Cleanup XenAPI environment
        uses: ./.github/workflows/cleanup-xapi-environment

  deprecation-test:
    name: Deprecation tests
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate empty configuration for make to be happy
        run: touch config.mk

      - name: quality-gate
        run: make quality-gate

      - name: pyflakes
        uses: reviewdog/action-pyflakes@master
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: error

  test-sdk-builds:
    name: Test SDK builds
    uses: ./.github/workflows/generate-and-build-sdks.yml
    with:
      # Ensure you also update ocaml-tests
      # when changing this value, to keep builds
      # consistent
      xapi_version: "v0.0.0"
